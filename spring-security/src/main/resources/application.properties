server.port=8088

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql=true
spring.jpa.hibernate.naming-stratgey=org.hibernate.cfg.ImprovedNamingStrategy


spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=root

spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000

spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider


# Enable logging
logging.level.org.hibernate.SQL=DEBUG
# Enable logging for HikariCP to verify that it is used
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 



spring.datasource.initialization-mode=always
spring.datasource.initialize=true
# When it is required to use sql files the following property could be enabled
# spring.datasource.schema=classpath:/schema.sql
spring.datasource.continue-on-error=true



junglee.dashboard.jwtSecret=@Pach3Kafka
# Need to revisit the time span for accesstoken and refresh token. This is set up with a very high value
junglee.dashboard.jwtExpirationMs=86400000
junglee.dashboard.jwtRefreshExpirationMs=172800000


spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration


## We will have to use the resource server
spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8180/auth/realms/public-library

